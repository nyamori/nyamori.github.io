<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Simulcast的新标准-rfc8853笔记</title>
    <link href="/2022/04/18/Simulcast%E7%9A%84%E6%96%B0%E6%A0%87%E5%87%86-rfc8853%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/04/18/Simulcast%E7%9A%84%E6%96%B0%E6%A0%87%E5%87%86-rfc8853%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h1><ul><li>2022-04-18 第一次编辑</li></ul><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="Simulcast基本介绍"><a href="#Simulcast基本介绍" class="headerlink" title="Simulcast基本介绍"></a>Simulcast基本介绍</h2><p>Simulcast可以翻译成多播&#x2F;同播&#x2F;联播，指在RTC应用里面指经过同一个RTP会话（RTP Session）发送同一视频源的不同RTP视频流（RTP Stream）的技术，这些视频流一般拥有不同的帧率、分辨率、码流乃至于编码。</p><p>在WebRTC应用当中，启用Simulcast的客户端会同时启用多个编码器编码多个视频流，并将其发送给SFU，使得与会的其他成员可以根据自己的实际需求要求SFU向自己转发其中一路符合需要的码流。如下图所示：</p><p><img src="https://nyamori.oss-cn-shanghai.aliyuncs.com/img/Simulcast-with-WebRTC.png" alt="在SFU中使用联播"></p><p>传统的联播实现采用了多SSRC的方式，也叫SDP munging。在这种实现方式下，SDP当中会出现<code>a=ssrc-group:SIM ssrc1 ssrc2 ssrc3</code>行，用于描述同一个媒体下的不同视频流。</p><p>目前来看，大多数的WebRTC应用和SFU在支持联播特性的时候使用了这种实现方式。早期的Chrome和Safari都采取了这种实现方式。这种SDP大概是这样的（在chrome:&#x2F;&#x2F;webrtc-internals&#x2F;中可以看到WebRTC的调试信息）：</p><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951093</span> cname:hTlM+qeNGeOz6KNK<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951093</span> msid:bzGeV70XSWsjK6GOPxkKL3qLHglA95aUGSXO d66fcc7b-f965-<span class="hljs-number">4</span>f3d-b7a3-<span class="hljs-number">0</span>ae5ad472d20<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2230960165</span> cname:hTlM+qeNGeOz6KNK<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2230960165</span> msid:bzGeV70XSWsjK6GOPxkKL3qLHglA95aUGSXO d66fcc7b-f965-<span class="hljs-number">4</span>f3d-b7a3-<span class="hljs-number">0</span>ae5ad472d20<br><span class="hljs-attribute">a</span>=ssrc-group:FID <span class="hljs-number">2639951093</span> <span class="hljs-number">2230960165</span><br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951094</span> cname:hTlM+qeNGeOz6KNK<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951094</span> msid:bzGeV70XSWsjK6GOPxkKL3qLHglA95aUGSXO d66fcc7b-f965-<span class="hljs-number">4</span>f3d-b7a3-<span class="hljs-number">0</span>ae5ad472d20<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951095</span> cname:hTlM+qeNGeOz6KNK<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951095</span> msid:bzGeV70XSWsjK6GOPxkKL3qLHglA95aUGSXO d66fcc7b-f965-<span class="hljs-number">4</span>f3d-b7a3-<span class="hljs-number">0</span>ae5ad472d20<br><span class="hljs-attribute">a</span>=ssrc-group:FID <span class="hljs-number">2639951094</span> <span class="hljs-number">2639951095</span><br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951096</span> cname:hTlM+qeNGeOz6KNK<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951096</span> msid:bzGeV70XSWsjK6GOPxkKL3qLHglA95aUGSXO d66fcc7b-f965-<span class="hljs-number">4</span>f3d-b7a3-<span class="hljs-number">0</span>ae5ad472d20<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951097</span> cname:hTlM+qeNGeOz6KNK<br><span class="hljs-attribute">a</span>=ssrc:<span class="hljs-number">2639951097</span> msid:bzGeV70XSWsjK6GOPxkKL3qLHglA95aUGSXO d66fcc7b-f965-<span class="hljs-number">4</span>f3d-b7a3-<span class="hljs-number">0</span>ae5ad472d20<br><span class="hljs-attribute">a</span>=ssrc-group:FID <span class="hljs-number">2639951096</span> <span class="hljs-number">2639951097</span><br><span class="hljs-attribute">a</span>=ssrc-group:SIM <span class="hljs-number">2639951093</span> <span class="hljs-number">2639951094</span> <span class="hljs-number">2639951096</span><br></code></pre></td></tr></table></figure><p>在这段SDP当中<code>a=ssrc-group:FID</code>是绑定FEC的描述行，而<code>a=ssrc-group:SIM</code>则是描述Simulcast信息的描述行。因此可以看到SSRC <code>2639951093</code>、<code>2639951094</code>和<code>2639951096</code>组成了一个联播组，描述了分辨率依次为低、中、高的一组视频流。</p><p>最近在实验Janus的demo的时候，在offer SDP里面就没有携带多SSRC的信息，而是变成了以下类型的SDP：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span>=rid:h send<br><span class="hljs-attr">a</span>=rid:m send<br><span class="hljs-attr">a</span>=rid:l send<br><span class="hljs-attr">a</span>=simulcast:send h<span class="hljs-comment">;m;l</span><br></code></pre></td></tr></table></figure><p>这种SDP看不到SSRC，但是有一个新增的属性rid，看起来描述了三种不同等级的RTP流。janus的answer SDP中也是类似的格式：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span>=rid:h recv<br><span class="hljs-attr">a</span>=rid:m recv<br><span class="hljs-attr">a</span>=rid:l recv<br><span class="hljs-attr">a</span>=simulcast:recv h<span class="hljs-comment">;m;l</span><br></code></pre></td></tr></table></figure><p>这种基于rid的格式现在已经有了一个RFC文档–<a href="https://datatracker.ietf.org/doc/html/rfc8853">rfc8853</a>。</p><h2 id="rfc8853的阅读笔记"><a href="#rfc8853的阅读笔记" class="headerlink" title="rfc8853的阅读笔记"></a>rfc8853的阅读笔记</h2><p>rfc8853的标题是<code> Using Simulcast in Session Description Protocol (SDP) and RTP Sessions</code>，可以看出来是通过SDP和RTP&#x2F;RTCP的扩展完成了联播相关的功能。本节对文档的部分描述进行一些记录。</p><h3 id="一些定义"><a href="#一些定义" class="headerlink" title="一些定义"></a>一些定义</h3><ul><li>rid即Restriction Identifier，定义在<a href="https://datatracker.ietf.org/doc/html/rfc8851">rfc8851</a>，通过<code>a=rid</code>行和offer&#x2F;answer模式来使得rtp处理者可以去定位某一个特定的rtp流。同时，该行可以做一些比特率，分辨率，帧率相关的描述</li><li><code>a=simulcast</code>行可以指定rid的发送接收方向，<code>;</code>用于分隔属性不同的rid，<code>,</code>用于分隔同类的rid</li></ul>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rfc</tag>
      
      <tag>rtc</tag>
      
      <tag>rtp</tag>
      
      <tag>sdp</tag>
      
      <tag>rfc8853</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/04/12/hello-world/"/>
    <url>/2022/04/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>第一次想弄个博客还是2016年，到现在也过去了6年。拖延症实在是可怕，只愿以后这个博客不会荒废。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
